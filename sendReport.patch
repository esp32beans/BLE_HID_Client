diff --git a/portable/packages/esp32/hardware/esp32/2.0.5/libraries/USB/src/USBHIDMouse.cpp b/portable/packages/esp32/hardware/esp32/2.0.5/libraries/USB/src/USBHIDMouse.cpp
index 30b802a..beab805 100644
--- a/portable/packages/esp32/hardware/esp32/2.0.5/libraries/USB/src/USBHIDMouse.cpp
+++ b/portable/packages/esp32/hardware/esp32/2.0.5/libraries/USB/src/USBHIDMouse.cpp
@@ -88,5 +88,8 @@ bool USBHIDMouse::isPressed(uint8_t b){
     return false;
 }
 
+void USBHIDMouse::sendReport(hid_mouse_report_t *report){
+    hid.SendReport(HID_REPORT_ID_MOUSE, report, sizeof(*report));
+}
 
 #endif /* CONFIG_TINYUSB_HID_ENABLED */
diff --git a/portable/packages/esp32/hardware/esp32/2.0.5/libraries/USB/src/USBHIDMouse.h b/portable/packages/esp32/hardware/esp32/2.0.5/libraries/USB/src/USBHIDMouse.h
index 17adf17..04d5511 100644
--- a/portable/packages/esp32/hardware/esp32/2.0.5/libraries/USB/src/USBHIDMouse.h
+++ b/portable/packages/esp32/hardware/esp32/2.0.5/libraries/USB/src/USBHIDMouse.h
@@ -46,6 +46,7 @@ public:
     void press(uint8_t b = MOUSE_LEFT);   // press LEFT by default
     void release(uint8_t b = MOUSE_LEFT); // release LEFT by default
     bool isPressed(uint8_t b = MOUSE_LEFT); // check LEFT by default
+    void sendReport(hid_mouse_report_t *report);
 
     // internal use
     uint16_t _onGetDescriptor(uint8_t* buffer);
